/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Menu;

import PilihData.DataPeminjaman;
import PilihData.DataPeminjamanSementara;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Doni Fitriansyah
 */
public class PengembalianBuku extends javax.swing.JDialog {

    private List<String[]> temporaryData = new ArrayList<>();
    boolean dataDitemukan;
    DefaultTableModel model, model1, model2;
    Connection koneksi;
    Statement perintah;
    ResultSet rs;
    DataPeminjaman dialogPeminjaman;
    DataPeminjamanSementara dialogPeminjamanSementara;
    MenuLogin login;

    private String kodeUser;

    /**
     * Creates new form KelolaDatabuku
     */
    public PengembalianBuku(java.awt.Frame parent, boolean modal, String kodeUser) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel) tblPengembalian.getModel();
        model1 = (DefaultTableModel) tblSementara.getModel();
        model2 = (DefaultTableModel) tblDetail.getModel();
        dataDitemukan = false;
        this.kodeUser = kodeUser;
        String kodeAnggota = txtKodeAnggota.getText();

        dialogPeminjaman = new DataPeminjaman(this, true);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost/sipustaka";
            String user = "root";
            String password = "";
            koneksi = DriverManager.getConnection(url, user, password);
            perintah = koneksi.createStatement();
        } catch (ClassNotFoundException e) {
            System.err.println("JDBC Driver tidak ditemukan");
        } catch (SQLException e) {
            System.err.println("Gagal koneksi atau menciptakan objek statement");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnTambahBuku = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtKodePeminjaman = new javax.swing.JTextField();
        txtKodeBuku = new javax.swing.JTextField();
        txtKodeAnggota = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTglPeminjaman = new javax.swing.JTextField();
        txtTglPengembalian = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDenda = new javax.swing.JTextField();
        btnPilihPeminjaman = new javax.swing.JButton();
        btnHitung = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtJudulBuku = new javax.swing.JTextField();
        txtTglDikembalikan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTotalPinjam = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPengembalian = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtKodePengembalian = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        panelSementara = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSementara = new javax.swing.JTable();
        btnBatalSementara = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKembalikan = new javax.swing.JButton();
        btnPilihPeminjamanSementara = new javax.swing.JButton();
        btnBaru = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Pengembalian Buku");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));
        jPanel1.setForeground(new java.awt.Color(255, 204, 0));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel1.setText("Pengembalian Buku");

        txtSearch.setText("Search");
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnTambahBuku.setText("Tambah Buku");
        btnTambahBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahBukuActionPerformed(evt);
            }
        });

        jLabel2.setText("Kode Peminjaman");

        jLabel3.setText("Kode Buku");

        txtKodePeminjaman.setEditable(false);

        txtKodeBuku.setEditable(false);
        txtKodeBuku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKodeBukuKeyTyped(evt);
            }
        });

        txtKodeAnggota.setEditable(false);

        txtNama.setEditable(false);
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });
        txtNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNamaKeyTyped(evt);
            }
        });

        jLabel14.setText("Kode Anggota");

        jLabel15.setText("Nama Anggota");

        jLabel5.setText("Tanggal Peminjaman");

        jLabel7.setText("Tanggal Pengembalian");

        txtTglPeminjaman.setEditable(false);

        txtTglPengembalian.setEditable(false);

        jLabel9.setText("Tanggal Dikembalikan");

        jLabel10.setText("Total Denda");

        txtDenda.setEditable(false);

        btnPilihPeminjaman.setText("Pilih Peminjaman");
        btnPilihPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihPeminjamanActionPerformed(evt);
            }
        });

        btnHitung.setText("Hitung");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel4.setText("Judul Buku");

        txtJudulBuku.setEditable(false);
        txtJudulBuku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJudulBukuKeyTyped(evt);
            }
        });

        txtTglDikembalikan.setEditable(false);

        jLabel11.setText("Total Pinjam");

        txtTotalPinjam.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel6.setText("Riwayat Pengembalian");

        tblPengembalian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Pengembalian", "Tanggal Dikembalikan", "Kode Peminjaman", "Kode Petugas", "Petugas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPengembalian.getTableHeader().setReorderingAllowed(false);
        tblPengembalian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPengembalianMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPengembalian);

        jLabel12.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel12.setText("Detail Pengembalian");

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Pengembalian", "Kode Buku", "Judul Buku", "Pengarang", "Tahun Terbit", "Kode Anggota (NIM)", "Nama Anggota", "Jumlah Denda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetail.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblDetail);

        jLabel8.setText("Kode Pengembalian");

        txtKodePengembalian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKodePengembalianKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKodePengembalianKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel13.setText(" \"Tekan tombol Enter untuk melanjutkan.\"");

        tblSementara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Buku", "Judul Buku", "Total Pinjam", "Denda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSementara.getTableHeader().setReorderingAllowed(false);
        tblSementara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSementaraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSementara);

        btnBatalSementara.setText("Batal");
        btnBatalSementara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalSementaraActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKembalikan.setText("Kembalikan");
        btnKembalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembalikanActionPerformed(evt);
            }
        });

        btnPilihPeminjamanSementara.setText("Pilih Peminjaman");
        btnPilihPeminjamanSementara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihPeminjamanSementaraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSementaraLayout = new javax.swing.GroupLayout(panelSementara);
        panelSementara.setLayout(panelSementaraLayout);
        panelSementaraLayout.setHorizontalGroup(
            panelSementaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSementaraLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelSementaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelSementaraLayout.createSequentialGroup()
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBatalSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnKembalikan, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPilihPeminjamanSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        panelSementaraLayout.setVerticalGroup(
            panelSementaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSementaraLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelSementaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBatalSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKembalikan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPilihPeminjamanSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        btnBaru.setText("Baru");
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTambahBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1282, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txtKodePengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtKodePeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPilihPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtKodeAnggota, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(24, 24, 24)
                                .addComponent(txtTglPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(28, 28, 28)
                                .addComponent(txtTglDikembalikan, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(33, 33, 33)
                                .addComponent(txtTglPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTotalPinjam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDenda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnHitung)))
                        .addGap(18, 18, 18)
                        .addComponent(panelSementara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtKodePengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnPilihPeminjaman)
                                    .addComponent(txtKodePeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(txtKodeAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtTglPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtTglPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtTglDikembalikan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtTotalPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtDenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnHitung))))
                        .addGap(18, 18, 18)
                        .addComponent(btnTambahBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelSementara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahBukuActionPerformed
        if (txtKodePengembalian.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan lengkapi data kode pengembalian!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtKodePengembalian.requestFocus();
            return;
        } else if (txtKodePeminjaman.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih kode peminjaman!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtKodePeminjaman.requestFocus();
            return;
        } else if (txtDenda.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan tekan tombol hitung!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            btnHitung.requestFocus();
            return;
        }

        if (bukuSudahDitambahkan(txtKodeBuku.getText())) {
            JOptionPane.showMessageDialog(this, "Buku tersebut sudah ditambahkan sebelumnya", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            insertArray();
            int pilihan = JOptionPane.showConfirmDialog(this, "Apakah anda ingin menambah buku lagi ?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (pilihan == JOptionPane.YES_OPTION) {
                btnTambahBuku.setEnabled(false);
                btnHitung.setEnabled(false);
                btnPilihPeminjaman.setEnabled(false);
                btnPilihPeminjamanSementara.requestFocus();
                btnPilihPeminjamanSementara.setEnabled(true);
                btnBatalSementara.setEnabled(false);
                btnHapus.setEnabled(false);
                btnKembalikan.setEnabled(true);
                txtKodePeminjaman.setText("");
                txtKodeBuku.setText("");
                txtJudulBuku.setText("");
                txtTglPeminjaman.setText("");
                txtTglPengembalian.setText("");
                txtTglDikembalikan.setText("");
                txtTotalPinjam.setText("");
                txtDenda.setText("");

            } else {
                btnKembalikan.setEnabled(true);
                btnTambahBuku.setEnabled(false);
                btnPilihPeminjamanSementara.setEnabled(false);
                btnHitung.setEnabled(false);
                btnKembalikan.requestFocus();
            }
        }

    }//GEN-LAST:event_btnTambahBukuActionPerformed

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        bersihData();
        tampilData();
        btnBaru.setEnabled(true);
        txtKodePengembalian.requestFocus();
        txtKodePengembalian.setEnabled(false);
        btnPilihPeminjaman.setEnabled(false);
        btnTambahBuku.setEnabled(false);
        btnHitung.setEnabled(false);
        btnReset.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatalSementara.setEnabled(false);
        btnKembalikan.setEnabled(false);
        btnPilihPeminjamanSementara.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void txtKodeBukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeBukuKeyTyped
        if (txtKodeBuku.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtKodeBukuKeyTyped


    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        String keyword = txtSearch.getText();

        DefaultTableModel model2 = (DefaultTableModel) tblPengembalian.getModel();
        model2.setRowCount(0);
        try {
            String sql = "SELECT p.kode_pengembalian, p.tgl_dikembalikan, p.kode_peminjaman, p.kode_user, u.nama_lengkap "
                    + "FROM pengembalian p "
                    + "INNER JOIN peminjaman pmj ON pmj.kode_peminjaman = p.kode_peminjaman "
                    + "INNER JOIN user u ON u.kode_user = p.kode_user "
                    + "WHERE p.kode_pengembalian LIKE ? OR pmj.kode_peminjaman LIKE ? OR p.tgl_dikembalikan LIKE ? OR u.nama_lengkap LIKE ?";
            try (PreparedStatement st = koneksi.prepareStatement(sql)) {
                st.setString(1, "%" + keyword + "%");
                st.setString(2, "%" + keyword + "%");
                st.setString(3, "%" + keyword + "%");
                st.setString(4, "%" + keyword + "%");
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    model2.addRow(new Object[]{
                        rs.getString("kode_pengembalian"),
                        rs.getString("tgl_dikembalikan"),
                        rs.getString("kode_peminjaman"),
                        rs.getString("kode_user"),
                        rs.getString("nama_lengkap")
                    });
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtNamaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isLetter(c) || c == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNamaKeyTyped

    private void btnPilihPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihPeminjamanActionPerformed
        // TODO add your handling code here:

        LocalDate tglDikembalikan = LocalDate.now();
        DateTimeFormatter formatTgl = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String tglDikembalikanTerformat = tglDikembalikan.format(formatTgl);

        txtTglDikembalikan.setText(tglDikembalikanTerformat);
        txtTglDikembalikan.setEditable(false);
        dialogPeminjaman.setVisible(true);
        dialogPeminjaman.tampilData();
        txtKodePeminjaman.setText(dialogPeminjaman.getKodePeminjaman());
        txtKodeBuku.setText(dialogPeminjaman.getKodeBuku());
        txtJudulBuku.setText(dialogPeminjaman.getJudul());
        txtKodeAnggota.setText(dialogPeminjaman.getKodeAnggotaSementara());
        txtNama.setText(dialogPeminjaman.getNama());
        txtTglPeminjaman.setText(dialogPeminjaman.getTglPeminjaman());
        txtTglPengembalian.setText(dialogPeminjaman.getTglPengembalian());
        txtTotalPinjam.setText(dialogPeminjaman.getTotalPinjam());
        btnHitung.requestFocus();
        btnReset.setEnabled(true);
        btnHitung.setEnabled(true);
    }//GEN-LAST:event_btnPilihPeminjamanActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        bersihData();
        temporaryData.clear();
        tampilDataSementara();
        txtKodePengembalian.setEnabled(false);
        txtKodePengembalian.requestFocus();
        btnReset.setEnabled(false);
        btnBaru.setEnabled(true);
        btnPilihPeminjaman.setEnabled(false);
        btnTambahBuku.setEnabled(false);
        btnHitung.setEnabled(false);
        btnKembalikan.setEnabled(false);
        btnPilihPeminjamanSementara.setEnabled(false);
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtJudulBukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudulBukuKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJudulBukuKeyTyped

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        if (txtKodePeminjaman.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih kode peminjaman!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            btnPilihPeminjamanSementara.requestFocus();
            return;
        }

        int totalPinjam = Integer.parseInt(txtTotalPinjam.getText());
        int dendaPerhari = 1000;
        String tanggalPengembalianString = txtTglPengembalian.getText();

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        LocalDate tanggalPengembalian = LocalDate.parse(tanggalPengembalianString, formatter);
        LocalDate tanggalAktual = LocalDate.now();

        long selisihHari = ChronoUnit.DAYS.between(tanggalPengembalian, tanggalAktual);
        selisihHari = Math.max(0, selisihHari);

        int denda = (int) (selisihHari * dendaPerhari * totalPinjam);
        txtDenda.setText(Integer.toString(denda));
        btnTambahBuku.setEnabled(true);

    }//GEN-LAST:event_btnHitungActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void tblPengembalianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPengembalianMouseClicked

        int row = tblPengembalian.getSelectedRow();
        String kodePengembalian = tblPengembalian.getValueAt(row, 0).toString();
        try {
            rs = perintah.executeQuery(
                    "SELECT dp.kode_pengembalian, pmj.kode_anggota, a.nama_anggota, b.kode_buku, b.judul_buku, b.pengarang, b.tahun_terbit, dp.jumlah_denda "
                    + "FROM detail_pengembalian dp "
                    + "INNER JOIN buku b ON b.kode_buku = dp.kode_buku "
                    + "INNER JOIN pengembalian p ON p.kode_pengembalian = dp.kode_pengembalian "
                    + "INNER JOIN peminjaman pmj ON pmj.kode_peminjaman = p.kode_peminjaman "
                    + "INNER JOIN anggota a ON a.kode_anggota = pmj.kode_anggota "
                    + "WHERE dp.kode_pengembalian = '" + kodePengembalian + "'"
                    + "ORDER BY dp.kode_pengembalian ASC"
            );
            model2.setRowCount(0);
            model2.fireTableDataChanged();
            while (rs.next()) {
                model2.addRow(new Object[]{
                    rs.getString("kode_pengembalian"),
                    rs.getString("kode_buku"),
                    rs.getString("judul_buku"),
                    rs.getString("pengarang"),
                    rs.getString("tahun_terbit"),
                    rs.getString("kode_anggota"),
                    rs.getString("nama_anggota"),
                    rs.getString("jumlah_denda")
                });
            }
        } catch (SQLException e) {
            System.err.println("Query Error");
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblPengembalianMouseClicked

    private void txtKodePengembalianKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodePengembalianKeyTyped
        if (txtKodePengembalian.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtKodePengembalianKeyTyped

    private void txtKodePengembalianKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodePengembalianKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtKodePengembalian.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Silahkan isi Kode pengembalian terlebih dahulu!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                txtKodePengembalian.requestFocus();
                return;
            }
            dataDitemukan = cariData(txtKodePengembalian.getText());
            if (dataDitemukan == true) {
                JOptionPane.showMessageDialog(this, "Kode pengembalian sudah ada silahkan isi Kode pengembalian yang berbeda!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                return;
            } else {
                txtKodePengembalian.setEnabled(false);
                btnPilihPeminjaman.requestFocus();
                btnPilihPeminjaman.setEnabled(true);
                btnReset.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txtKodePengembalianKeyReleased

    private void tblSementaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSementaraMouseClicked
        int hitungBaris = tblSementara.getRowCount();
        btnBatalSementara.setEnabled(true);
        if (hitungBaris == 1) {
            btnHapus.setEnabled(false);
        } else {
            btnHapus.setEnabled(true);
        }
    }//GEN-LAST:event_tblSementaraMouseClicked

    private void btnBatalSementaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalSementaraActionPerformed
        btnBatalSementara.setEnabled(false);
        btnKembalikan.setEnabled(true);
        txtKodePeminjaman.setText("");
        txtKodeBuku.setText("");
        txtJudulBuku.setText("");
        txtTglPeminjaman.setText("");
        txtTglPengembalian.setText("");
        txtTglDikembalikan.setText("");
        txtTotalPinjam.setText("");
        txtDenda.setText("");
        btnHitung.setEnabled(false);
    }//GEN-LAST:event_btnBatalSementaraActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        String kodeBuku = model1.getValueAt(tblSementara.getSelectedRow(), 0).toString();

        if ((tblSementara.getSelectedRow() == -1) && (dataDitemukan == false)) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih baris data yang akan dihapus!",
                    "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int pilihan;
            pilihan = JOptionPane.showConfirmDialog(this, "Apakah anda yakin akan menghapus data?",
                    "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (pilihan == 0) {
                // Mencari indeks buku dalam array temporaryData
                int indeksYangAkanDihapus = -1;
                for (int i = 0; i < temporaryData.size(); i++) {
                    String[] data = temporaryData.get(i);
                    if (data[0].equals(kodeBuku)) {
                        indeksYangAkanDihapus = i;
                        break;
                    }
                }

                // Menghapus data dari array jika buku ditemukan
                if (indeksYangAkanDihapus != -1) {
                    temporaryData.remove(indeksYangAkanDihapus);
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    tampilDataSementara();
                } else {
                    JOptionPane.showMessageDialog(this, "Buku tidak ditemukan dalam array sementara", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                }

                btnHapus.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKembalikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembalikanActionPerformed

        //        for (String[] data : temporaryData) {
        //            System.out.println(Arrays.toString(data));
        //        }
        int pilihan;
        pilihan = JOptionPane.showConfirmDialog(this, "Data tidak dapat diubah jika anda sudah mengembalikan buku \n Apakah anda yakin akan mengembalikan buku?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (pilihan == 0) {
            try {

                LocalDate tglDikembalikan = LocalDate.now();
                DateTimeFormatter formatTgl = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                String tglDikembalikanTerformat = tglDikembalikan.format(formatTgl);

                perintah.execute("INSERT INTO pengembalian VALUES('"
                        + txtKodePengembalian.getText() + "','"
                        + tglDikembalikanTerformat + "','"
                        + txtKodePeminjaman.getText() + "','"
                        + kodeUser + "')"
                );

                for (String[] data : temporaryData) {
                    String kodePeminjaman = txtKodePengembalian.getText();
                    String kodeBuku = data[0]; // kode buku dari array
                    String jumlahPinjam = data[2]; // jumlah pinjam dari array
                    String denda = data[3]; // tatus pinjam dari array

                    try {
                        perintah.execute("INSERT INTO detail_pengembalian (kode_pengembalian, kode_buku, jumlah_kembali, jumlah_denda) "
                                + "VALUES ('" + kodePeminjaman + "', '" + kodeBuku + "', '" + jumlahPinjam + "', '" + denda + "')");
                        updateStatusPeminjaman();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }

                JOptionPane.showMessageDialog(this, "Buku berhasil dikembalikan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                temporaryData.clear();
                dialogPeminjaman.tampilData();
                tampilData();
                tampilDataSementara();
                bersihData();
                btnKembalikan.setEnabled(false);
                btnBatalSementara.setEnabled(false);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnKembalikanActionPerformed

    private void btnPilihPeminjamanSementaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihPeminjamanSementaraActionPerformed
        String kodeAnggotaSementara = txtKodeAnggota.getText();
        DataPeminjamanSementara dialogPeminjamanSementara = new DataPeminjamanSementara(this, true, kodeAnggotaSementara);

        LocalDate tglDikembalikan = LocalDate.now();
        DateTimeFormatter formatTgl = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String tglDikembalikanTerformat = tglDikembalikan.format(formatTgl);

        txtTglDikembalikan.setText(tglDikembalikanTerformat);
        txtTglDikembalikan.setEditable(false);
        dialogPeminjamanSementara.setVisible(true);
        dialogPeminjamanSementara.tampilData();
        txtKodePeminjaman.setText(dialogPeminjamanSementara.getKodePeminjaman());
        txtKodeBuku.setText(dialogPeminjamanSementara.getKodeBuku());
        txtJudulBuku.setText(dialogPeminjamanSementara.getJudul());
        txtKodeAnggota.setText(dialogPeminjamanSementara.getKodeAnggotaSementara());
        txtNama.setText(dialogPeminjamanSementara.getNama());
        txtTglPeminjaman.setText(dialogPeminjamanSementara.getTglPeminjaman());
        txtTglPengembalian.setText(dialogPeminjamanSementara.getTglPengembalian());
        txtTotalPinjam.setText(dialogPeminjamanSementara.getTotalPinjam());
        btnHitung.requestFocus();
        btnReset.setEnabled(true);
        btnHitung.setEnabled(true);
        btnBatalSementara.setEnabled(true);

    }//GEN-LAST:event_btnPilihPeminjamanSementaraActionPerformed

    private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruActionPerformed
        bersihData();
        txtKodePengembalian.setEnabled(true);
        txtKodePengembalian.requestFocus();
        btnBaru.setEnabled(false);
        btnReset.setEnabled(true);
        btnPilihPeminjaman.setEnabled(false);
        btnTambahBuku.setEnabled(false);
        btnHitung.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatalSementara.setEnabled(false);
        btnKembalikan.setEnabled(false);
        btnPilihPeminjamanSementara.setEnabled(false);
    }//GEN-LAST:event_btnBaruActionPerformed

    private boolean cariData(String data) {
        if (!txtKodePengembalian.getText().equals("")) {
            try {
                rs = perintah.executeQuery("SELECT * FROM pengembalian "
                        + "WHERE kode_pengembalian = '" + data + "'");

                if (rs.next()) {
                    return true;
                } else {
                    return false;
                }
            } catch (SQLException e) {
                System.err.println("Query Error");
                e.printStackTrace();
            }
        }
        return false;
    }

    private void updateStatusPeminjaman() {
        String statusPeminjaman = "Sudah Dikembalikan";
        for (String[] data : temporaryData) {
            String kodePeminjaman = txtKodePeminjaman.getText();
            String kodeBuku = data[0]; // kode buku dari array

            try {
                perintah.execute("UPDATE detail_peminjaman SET "
                        + "status_peminjaman = '" + statusPeminjaman + "' "
                        + "WHERE kode_peminjaman = '" + kodePeminjaman + "' AND kode_buku = '" + kodeBuku + "' ");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnBatalSementara;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnKembalikan;
    private javax.swing.JButton btnPilihPeminjaman;
    private javax.swing.JButton btnPilihPeminjamanSementara;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambahBuku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panelSementara;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTable tblPengembalian;
    private javax.swing.JTable tblSementara;
    private javax.swing.JTextField txtDenda;
    private javax.swing.JTextField txtJudulBuku;
    private javax.swing.JTextField txtKodeAnggota;
    private javax.swing.JTextField txtKodeBuku;
    private javax.swing.JTextField txtKodePeminjaman;
    private javax.swing.JTextField txtKodePengembalian;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTglDikembalikan;
    private javax.swing.JTextField txtTglPeminjaman;
    private javax.swing.JTextField txtTglPengembalian;
    private javax.swing.JTextField txtTotalPinjam;
    // End of variables declaration//GEN-END:variables

    private void bersihData() {
        txtKodePeminjaman.setText("");
        txtKodeBuku.setText("");
        txtJudulBuku.setText("");
        txtKodeAnggota.setText("");
        txtNama.setText("");
        txtTglPeminjaman.setText("");
        txtTglPengembalian.setText("");
        txtTglDikembalikan.setText("");
        txtDenda.setText("");
        txtTotalPinjam.setText("");
        txtKodePengembalian.setText("");

    }

    private void tampilData() {
        try {
            rs = perintah.executeQuery(
                    "SELECT p.kode_pengembalian, p.tgl_dikembalikan, p.kode_peminjaman, p.kode_user, u.nama_lengkap "
                    + "FROM pengembalian p "
                    + "INNER JOIN peminjaman pmj ON pmj.kode_peminjaman = p.kode_peminjaman "
                    + "INNER JOIN user u ON pmj.kode_user = u.kode_user "
                    + "ORDER BY p.kode_pengembalian ASC;"
            );
            model.setRowCount(0);
            model.fireTableDataChanged();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("kode_pengembalian"),
                    rs.getString("tgl_dikembalikan"),
                    rs.getString("kode_peminjaman"),
                    rs.getString("kode_user"),
                    rs.getString("nama_lengkap")
                });
            }
        } catch (SQLException e) {
            System.err.println("Query Error");
            e.printStackTrace();
        }
    }

    private void tampilDataSementara() {
        model1.setRowCount(0);
        model1.fireTableDataChanged();
        for (String[] data : temporaryData) {
            model1.addRow(data);
        }
    }

    private void insertArray() {
        try {
            String[] data = {
                txtKodeBuku.getText(),
                txtJudulBuku.getText(),
                txtTotalPinjam.getText(),
                txtDenda.getText()
            };

            temporaryData.add(data);
            tampilDataSementara();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            e.printStackTrace();
        }
    }

    private boolean bukuSudahDitambahkan(String kodeBuku) {
        for (String[] data : temporaryData) {
            if (data[0].equals(kodeBuku)) {
                return true;
            }
        }
        return false;
    }

}
