/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Menu;

import PilihData.DataKategori;
import PilihData.DataPenerbit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Doni Fitriansyah
 */
public class KelolaDataBuku extends javax.swing.JDialog {

    boolean modeSimpan;
    boolean dataDitemukan;
    DefaultTableModel model;
    Connection koneksi;
    Statement perintah;
    ResultSet rs;
    DataKategori dialogKategori;
    DataPenerbit dialogPenerbit;
    String kodeKategoriLama;
    String kodePenerbitLama;

    /**
     * Creates new form KelolaDatabuku
     */
    public KelolaDataBuku(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel) tblData.getModel();
        modeSimpan = true;
        dataDitemukan = false;

        dialogKategori = new DataKategori(this, true);
        dialogPenerbit = new DataPenerbit(this, true);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost/sipustaka";
            String user = "root";
            String password = "";
            koneksi = DriverManager.getConnection(url, user, password);
            perintah = koneksi.createStatement();
        } catch (ClassNotFoundException e) {
            System.err.println("JDBC Driver tidak ditemukan");
        } catch (SQLException e) {
            System.err.println("Gagal koneksi atau menciptakan objek statement");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBatal = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnBaru = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        txtPengarang = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        txtTahun = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPenerbit = new javax.swing.JTextField();
        txtKategori = new javax.swing.JTextField();
        btnKategori = new javax.swing.JButton();
        btnPenerbit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Buku");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(255, 204, 0));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel1.setText("Kelola Data Buku");

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        txtSearch.setText("Search");
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnBaru.setText("Baru");
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Buku", "Judul buku", "Pengarang", "Tahun Terbit", "Kategori", "Penerbit", "Stok", "ID Kategori", "ID Penerbit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.getTableHeader().setReorderingAllowed(false);
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel2.setText("Kode Buku");

        jLabel3.setText("Judul Buku");

        jLabel4.setText("Pengarang");

        jLabel5.setText("Kategori");

        jLabel6.setText("Penerbit");

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        txtJudul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJudulKeyTyped(evt);
            }
        });

        txtPengarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPengarangKeyTyped(evt);
            }
        });

        jLabel7.setText("Stok Buku");

        txtStok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStokKeyTyped(evt);
            }
        });

        txtTahun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTahunKeyTyped(evt);
            }
        });

        jLabel8.setText("Tahun Terbit");

        txtPenerbit.setEditable(false);

        txtKategori.setEditable(false);

        btnKategori.setText("Pilih Kategori");
        btnKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKategoriActionPerformed(evt);
            }
        });

        btnPenerbit.setText("Pilih Penerbit");
        btnPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPenerbitActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel9.setText(" \"Tekan tombol Enter untuk melanjutkan.\"");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                                            .addComponent(txtPenerbit))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPengarang, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                                    .addComponent(txtJudul)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9))
                                    .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(235, 235, 235)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 26, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKategori))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPenerbit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tampilData() {
        try {
            rs = perintah.executeQuery(
                    "SELECT b.kode_buku, b.judul_buku, b.pengarang, b.tahun_terbit, "
                    + "k.kode_kategori, k.nama_kategori, "
                    + "p.kode_penerbit, p.nama_penerbit, "
                    + "b.stok "
                    + "FROM buku b "
                    + "INNER JOIN kategori k ON k.kode_kategori = b.kode_kategori "
                    + "INNER JOIN penerbit p ON p.kode_penerbit = b.kode_penerbit "
                    + "ORDER BY b.kode_buku ASC;"
            );
            model.setRowCount(0);
            model.fireTableDataChanged();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("kode_buku"),
                    rs.getString("judul_buku"),
                    rs.getString("pengarang"),
                    rs.getString("tahun_terbit"),
                    rs.getString("nama_kategori"),
                    rs.getString("nama_penerbit"),
                    rs.getString("stok"),
                    rs.getString("kode_kategori"),
                    rs.getString("kode_penerbit")
                });
            }
        } catch (SQLException e) {
            System.err.println("Query Error");
            e.printStackTrace();
        }
    }


    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (txtJudul.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan lengkapi data judul buku!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtJudul.requestFocus();
        } else if (txtPengarang.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan lengkapi data pengarang!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtPengarang.requestFocus();
        } else if (txtTahun.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan lengkapi data tahun terbit!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtPengarang.requestFocus();
        } else if (txtKategori.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih data kategori!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtKategori.requestFocus();
        } else if (txtPenerbit.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih data penerbit!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtKategori.requestFocus();
        } else if (txtStok.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan lengkapi data jumlah buku!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            txtStok.requestFocus();
        } else {
            if (modeSimpan) {
                dataDitemukan = cariData(txtID.getText());
                if (dataDitemukan) {
                    JOptionPane.showMessageDialog(this, "Data gagal ditambahkan, " + "karena kode buku " + txtID.getText() + " telah ada di tabel", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    try {

                        perintah.execute("INSERT INTO buku VALUES('"
                                + txtID.getText() + "','"
                                + txtJudul.getText() + "','"
                                + txtPengarang.getText() + "','"
                                + txtTahun.getText() + "','"
                                + dialogKategori.getKodeKategori() + "','"
                                + dialogPenerbit.getKodePenerbit() + "','"
                                + txtStok.getText() + "')"
                        );
                        JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                        tampilData();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                        e.printStackTrace();

                    }
                }
            } else { // mode update
                if ((tblData.getSelectedRow() == -1) && (dataDitemukan == false)) {
                    JOptionPane.showMessageDialog(this, "Silahkan pilih baris yang akan diubah!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    try {

                        String cekKategori = (dialogKategori.getKodeKategori() == null ? kodeKategoriLama : dialogKategori.getKodeKategori());

                        String cekPenerbit = (dialogPenerbit.getKodePenerbit() == null ? kodePenerbitLama : dialogPenerbit.getKodePenerbit());
                        perintah.execute("UPDATE buku SET "
                                + "judul_buku = '" + txtJudul.getText() + "', "
                                + "pengarang = '" + txtPengarang.getText() + "', "
                                + "tahun_terbit = '" + txtTahun.getText() + "', "
                                + "kode_kategori = '" + cekKategori + "', "
                                + "kode_penerbit = '" + cekPenerbit + "', "
                                + "stok = '" + txtStok.getText() + "' "
                                + "WHERE kode_buku = '" + txtID.getText() + "'");
                        JOptionPane.showMessageDialog(this, "Data berhasil diubah", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                        tampilData();
                    } catch (SQLException e) {
                        System.err.println("Query Error");
                        e.printStackTrace();

                    }
                }
            }

            bersihData();
            txtID.setEnabled(false);
            txtJudul.setEnabled(false);
            txtPengarang.setEnabled(false);
            txtTahun.setEnabled(false);
            txtStok.setEnabled(false);
            txtPenerbit.setEnabled(false);
            txtKategori.setEnabled(false);
            btnBaru.requestFocus();
            btnBaru.setEnabled(true);
            btnSimpan.setEnabled(false);
            btnUbah.setEnabled(false);
            btnHapus.setEnabled(false);
            btnBatal.setEnabled(false);
            btnKategori.setEnabled(false);
            btnPenerbit.setEnabled(false);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        bersihData();
        tampilData();
        btnPenerbit.setEnabled(false);
        btnKategori.setEnabled(false);
        txtID.setEnabled(false);
        txtJudul.setEnabled(false);
        txtPengarang.setEnabled(false);
        txtTahun.setEnabled(false);
        txtStok.setEnabled(false);
        txtPengarang.setEnabled(false);
        txtKategori.setEnabled(false);
        txtPenerbit.setEnabled(false);
        btnBaru.setEnabled(true);
        btnBaru.requestFocus();
        btnSimpan.setEnabled(false);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatal.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void txtIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtID.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Silahkan isi Kode buku terlebih dahulu!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                txtID.requestFocus();
                return;
            }
            dataDitemukan = cariData(txtID.getText());
            if (dataDitemukan == true) {
                int pilihan;
                pilihan = JOptionPane.showConfirmDialog(this, "Kode buku " + txtID.getText() + " sudah ada! " + "Apakah anda ingin mengubah/menghapus data ?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (pilihan == 0) {
                    try {
                        txtJudul.setText(rs.getString("judul_buku"));
                        txtPengarang.setText(rs.getString("pengarang"));
                        txtTahun.setText(rs.getString("tahun_terbit"));
                        txtStok.setText(rs.getString("stok"));
                        txtKategori.setText(rs.getString("nama_kategori"));
                        txtPenerbit.setText(rs.getString("nama_penerbit"));
                        kodeKategoriLama= rs.getString("kode_kategori");
                        kodePenerbitLama= rs.getString("kode_penerbit");
                        txtID.setEnabled(false);
                        txtJudul.setEnabled(false);
                        txtPengarang.setEnabled(false);
                        btnBaru.setEnabled(false);
                        txtPenerbit.setEnabled(false);
                        txtKategori.setEnabled(false);
                        btnKategori.setEnabled(false);
                        btnPenerbit.setEnabled(false);
                        btnSimpan.setEnabled(false);
                        btnHapus.setEnabled(false);
                        btnUbah.requestFocus();
                        btnUbah.setEnabled(true);
                        btnBatal.setEnabled(true);
                    } catch (SQLException e) {
                        System.err.println("Query Error");
                        e.printStackTrace();
                    }
                } else {
                    txtID.setText("");
                    txtID.requestFocus();
                }
            } else {
                txtID.setEnabled(false);
                txtJudul.setEnabled(true);
                txtPengarang.setEnabled(true);
                txtTahun.setEnabled(true);
                txtJudul.requestFocus();
                txtStok.setEnabled(true);
                btnSimpan.setEnabled(true);
                btnBatal.setEnabled(true);
                txtPenerbit.setEnabled(true);
                txtKategori.setEnabled(true);
                btnKategori.setEnabled(true);
                btnPenerbit.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txtIDKeyReleased

    private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruActionPerformed
        bersihData();
        txtID.setEnabled(true);
        txtID.requestFocus();
        txtJudul.setEnabled(false);
        txtPengarang.setEnabled(false);
        txtTahun.setEnabled(false);
        txtStok.setEnabled(false);
        btnSimpan.setEnabled(false);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBaru.setEnabled(false);
        btnBatal.setEnabled(true);
        txtPenerbit.setEnabled(false);
        txtKategori.setEnabled(false);
        btnKategori.setEnabled(false);
        btnPenerbit.setEnabled(false);
        modeSimpan = true;
    }//GEN-LAST:event_btnBaruActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        bersihData();
        txtID.setEnabled(false);
        txtJudul.setEnabled(false);
        txtPengarang.setEnabled(false);
        txtTahun.setEnabled(false);
        txtStok.setEnabled(false);
        btnBaru.requestFocus();
        btnBaru.setEnabled(true);
        btnSimpan.setEnabled(false);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatal.setEnabled(false);

        txtPenerbit.setEnabled(false);
        txtKategori.setEnabled(false);
        btnKategori.setEnabled(false);
        btnPenerbit.setEnabled(false);

    }//GEN-LAST:event_btnBatalActionPerformed

    private void txtJudulKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudulKeyTyped
        if (txtJudul.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtJudulKeyTyped


    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        if (tblData.getSelectedRow() >= 0) {
            txtID.setText(model.getValueAt(tblData.getSelectedRow(), 0).toString());
            txtJudul.setText(model.getValueAt(tblData.getSelectedRow(), 1).toString());
            txtPengarang.setText(model.getValueAt(tblData.getSelectedRow(), 2).toString());
            txtTahun.setText(model.getValueAt(tblData.getSelectedRow(), 3).toString());
            txtKategori.setText(model.getValueAt(tblData.getSelectedRow(), 4).toString());
            txtPenerbit.setText(model.getValueAt(tblData.getSelectedRow(), 5).toString());
            txtStok.setText(model.getValueAt(tblData.getSelectedRow(), 6).toString());
            kodeKategoriLama = model.getValueAt(tblData.getSelectedRow(), 7).toString();
            kodePenerbitLama = model.getValueAt(tblData.getSelectedRow(), 8).toString();
            btnBaru.setEnabled(false);
            btnSimpan.setEnabled(false);
            btnUbah.setEnabled(true);
            btnHapus.setEnabled(true);
            btnUbah.requestFocus();
            btnBatal.setEnabled(true);
        }
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        txtID.setEnabled(false);
        txtJudul.setEnabled(true);
        txtPengarang.setEnabled(true);
        txtTahun.setEnabled(true);
        txtStok.setEnabled(true);
        txtPenerbit.setEnabled(true);
        txtKategori.setEnabled(true);
        txtJudul.requestFocus();
        btnBaru.setEnabled(false);
        btnSimpan.setEnabled(true);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatal.setEnabled(true);
        btnKategori.setEnabled(true);
        btnPenerbit.setEnabled(true);

        modeSimpan = false;
    }//GEN-LAST:event_btnUbahActionPerformed

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        if (txtID.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtPengarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPengarangKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isLetter(c) || c == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
        if (txtPengarang.getText().length() >= 45) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPengarangKeyTyped

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if ((tblData.getSelectedRow() == -1) && (dataDitemukan == false)) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih baris data yang akan dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int pilihan;
            pilihan = JOptionPane.showConfirmDialog(this, "Apakah anda yakin akan menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (pilihan == 0) {
                try {
                    perintah.execute("DELETE FROM buku " + "WHERE kode_buku = '" + txtID.getText() + "'");
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    tampilData();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Data Gagal Dihapus karena terhubung dengan data lain", "Informasi", JOptionPane.ERROR_MESSAGE);
                }
                bersihData();
                btnBaru.requestFocus();
                btnBaru.setEnabled(true);
                btnSimpan.setEnabled(false);
                btnUbah.setEnabled(false);
                btnHapus.setEnabled(false);
                btnBatal.setEnabled(false);

            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        String keyword = txtSearch.getText();

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);
        try {
            String sql = "SELECT b.kode_buku, b.judul_buku, b.pengarang, b.tahun_terbit,"
                    + "k.nama_kategori, p.nama_penerbit, b.stok, b.kode_kategori, b.kode_penerbit "
                    + "FROM buku b "
                    + "INNER JOIN kategori k ON k.kode_kategori = b.kode_kategori "
                    + "INNER JOIN penerbit p ON p.kode_penerbit = b.kode_penerbit "
                    + "WHERE b.kode_buku LIKE ? OR b.judul_buku LIKE ? OR b.pengarang LIKE ? "
                    + "OR b.tahun_terbit LIKE ? OR k.nama_kategori LIKE ? OR LOWER(p.nama_penerbit) LIKE LOWER(?) "
                    + "OR b.stok LIKE ? OR b.kode_kategori LIKE ? OR b.kode_penerbit LIKE ? ORDER BY b.kode_buku ASC";
            try (PreparedStatement st = koneksi.prepareStatement(sql)) {
                st.setString(1, "%" + keyword + "%");
                st.setString(2, "%" + keyword + "%");
                st.setString(3, "%" + keyword + "%");
                st.setString(4, "%" + keyword + "%");
                st.setString(5, "%" + keyword + "%");
                st.setString(6, "%" + keyword + "%");
                st.setString(7, "%" + keyword + "%");
                st.setString(8, "%" + keyword + "%");
                st.setString(9, "%" + keyword + "%");
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getString("kode_buku"),
                        rs.getString("judul_buku"),
                        rs.getString("pengarang"),
                        rs.getString("tahun_terbit"),
                        rs.getString("nama_kategori"),
                        rs.getString("nama_penerbit"),
                        rs.getString("stok"),
                        rs.getString("kode_kategori"),
                        rs.getString("kode_penerbit")
                    });
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtStokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStokKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
        if (txtStok.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txtStokKeyTyped

    private void txtTahunKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTahunKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
        if (txtTahun.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTahunKeyTyped

    private void btnKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKategoriActionPerformed
        // TODO add your handling code here:

        dialogKategori.setVisible(true);
        dialogKategori.tampilData();
        txtKategori.setText(dialogKategori.getNamaKategori());


    }//GEN-LAST:event_btnKategoriActionPerformed

    private void btnPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPenerbitActionPerformed
        // TODO add your handling code here:
        dialogPenerbit.setVisible(true);
        dialogPenerbit.tampilData();
        txtPenerbit.setText(dialogPenerbit.getNamaPenerbit());
    }//GEN-LAST:event_btnPenerbitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKategori;
    private javax.swing.JButton btnPenerbit;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtKategori;
    private javax.swing.JTextField txtPenerbit;
    private javax.swing.JTextField txtPengarang;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStok;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables

    private void bersihData() {
        txtID.setText("");
        txtJudul.setText("");
        txtPengarang.setText("");
        txtTahun.setText("");
        txtStok.setText("");
        txtPenerbit.setText("");
        txtKategori.setText("");
    }

    private boolean cariData(String data) {
        if (!txtID.getText().equals("")) {
            try {
                rs = perintah.executeQuery("SELECT b.kode_buku, b.judul_buku, b.pengarang, b.tahun_terbit,"
                        + "k.nama_kategori, p.nama_penerbit, b.stok, b.kode_kategori, b.kode_penerbit "
                        + "FROM buku b "
                        + "INNER JOIN kategori k ON k.kode_kategori = b.kode_kategori "
                        + "INNER JOIN penerbit p ON p.kode_penerbit = b.kode_penerbit "
                        + "WHERE kode_buku = '" + data + "'");

                if (rs.next()) {
                    return true;
                } else {
                    return false;
                }
            } catch (SQLException e) {
                System.err.println("Query Error");
                e.printStackTrace();
            }
        }
        return false;
    }

}
