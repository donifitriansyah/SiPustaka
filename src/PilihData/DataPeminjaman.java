/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package PilihData;

import java.awt.Dialog;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

/**
 *
 * @author Doni Fitriansyah
 */
public class DataPeminjaman extends javax.swing.JDialog {

    public String getKodeAnggotaSementara() {
        return kodeAnggota;
    }

    public String getNama() {
        return nama;
    }

    public String getKodeBuku() {
        return kodeBuku;
    }

    public String getJudul() {
        return judul;
    }

    public String getTglPeminjaman() {
        return tglPeminjaman;
    }

    public String getTglPengembalian() {
        return tglPengembalian;
    }

    public String getKodePeminjaman() {
        return kodePeminjaman;
    }
    
    public String getTotalPinjam() {
        return totalPinjam;
    }

    String kodePeminjaman;

    String kodeAnggota;
    String nama;

    String kodeBuku;
    String judul;

    String tglPeminjaman;
    String tglPengembalian;

    DefaultTableModel model;
    Connection koneksi;
    Statement perintah;
    ResultSet rs;
    
    String totalPinjam;

    /**
     * Creates new form DataPenerbit
     */
    public DataPeminjaman(Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        model = (DefaultTableModel) tblData.getModel();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost/sipustaka";
            String user = "root";
            String password = "";
            koneksi = DriverManager.getConnection(url, user, password);
            perintah = koneksi.createStatement();
        } catch (ClassNotFoundException e) {
            System.err.println("JDBC Driver tidak ditemukan");
        } catch (SQLException e) {
            System.err.println("Gagal koneksi atau menciptakan objek statement");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel1.setText("Pilih Data Peminjaman");

        txtSearch.setText("Search");
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Poppins Medium", 2, 10)); // NOI18N
        jLabel2.setText("*Silahkan klik data peminjaman yang tersedia didalam tabel");

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Peminjaman", "Kode Buku", "Judul Buku", "Kode Anggota", "Nama Anggota", "Peminjaman", "Pengembalian", "Total Pinjam"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.getTableHeader().setReorderingAllowed(false);
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        String keyword = txtSearch.getText();

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);
        try {
            String sql = "SELECT p.kode_peminjaman, p.tgl_peminjaman, p.tgl_pengembalian, p.total_pinjam, a.nama_anggota, p.kode_anggota, u.nama_lengkap "
                    + "FROM peminjaman p "
                    + "INNER JOIN anggota a ON a.kode_anggota = p.kode_anggota "
                    + "INNER JOIN user u on u.kode_user = p.kode_user "
                    + "WHERE p.kode_peminjaman LIKE ? OR p.kode_anggota LIKE ? OR a.nama_anggota LIKE ? "
                    + "OR p.tgl_peminjaman LIKE ? OR p.tgl_pengembalian LIKE ? OR u.nama_lengkap LIKE ? OR p.total_pinjam LIKE ? ";
            try (PreparedStatement st = koneksi.prepareStatement(sql)) {
                st.setString(1, "%" + keyword + "%");
                st.setString(2, "%" + keyword + "%");
                st.setString(3, "%" + keyword + "%");
                st.setString(4, "%" + keyword + "%");
                st.setString(5, "%" + keyword + "%");
                st.setString(6, "%" + keyword + "%");
                st.setString(7, "%" + keyword + "%");
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getString("kode_peminjaman"),
                        rs.getString("kode_anggota"),
                        rs.getString("nama_anggota"),
                        rs.getString("tgl_peminjaman"),
                        rs.getString("tgl_pengembalian"),
                        rs.getString("total_pinjam"),
                        rs.getString("nama_lengkap")
                    });
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampilData();
    }//GEN-LAST:event_formWindowOpened

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        // TODO add your handling code here:
        if (tblData.getSelectedRow() >= 0) {
            kodePeminjaman = model.getValueAt(tblData.getSelectedRow(), 0).toString();
            kodeBuku = model.getValueAt(tblData.getSelectedRow(), 1).toString();
            judul = model.getValueAt(tblData.getSelectedRow(), 2).toString();
            kodeAnggota = model.getValueAt(tblData.getSelectedRow(), 3).toString();
            nama = model.getValueAt(tblData.getSelectedRow(), 4).toString();
            tglPeminjaman = model.getValueAt(tblData.getSelectedRow(), 5).toString();
            tglPengembalian = model.getValueAt(tblData.getSelectedRow(), 6).toString();
            totalPinjam = model.getValueAt(tblData.getSelectedRow(), 7).toString();
            
            dispose();
        }
    }//GEN-LAST:event_tblDataMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public void tampilData() {
        try {
            rs = perintah.executeQuery(
                    "SELECT * "
                    + "FROM detail_peminjaman dp "
                    + "INNER JOIN peminjaman p ON p.kode_peminjaman = dp.kode_peminjaman "
                    + "INNER JOIN anggota a ON a.kode_anggota = p.kode_anggota "
                    + "INNER JOIN buku b ON b.kode_buku = dp.kode_buku "
                    + "WHERE status_peminjaman = 'Sedang Dipinjam'"
            );
            model.setRowCount(0);
            model.fireTableDataChanged();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("kode_peminjaman"),
                    rs.getString("kode_buku"),
                    rs.getString("judul_buku"),
                    rs.getString("kode_anggota"),
                    rs.getString("nama_anggota"),
                    rs.getString("tgl_peminjaman"),
                    rs.getString("tgl_pengembalian"),
                    rs.getString("jumlah_pinjam"),
                });
            }
        } catch (SQLException e) {
            System.err.println("Query Error");
            e.printStackTrace();
        }
    }
}
